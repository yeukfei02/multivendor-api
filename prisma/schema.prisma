generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "rhel-openssl-1.0.x", "linux-arm64-openssl-1.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model users {
  id                 String             @id @default(uuid()) @db.Uuid
  phone              String             @unique
  phone_confirmed    Boolean            @default(false)
  type               String?
  allow_order        Boolean            @default(false)
  is_active          Boolean            @default(false)
  created_at         DateTime           @default(now())
  updated_at         DateTime           @default(now())
  companies          company[]
  delivery_addresses delivery_address[]
  last_events        last_event[]
  orders             order[]

  @@index([allow_order], map: "index_users_on_allow_order")
  @@index([created_at], map: "index_users_on_created_at")
  @@index([is_active], map: "index_users_on_is_active")
  @@index([phone], map: "index_users_on_phone")
  @@index([phone_confirmed], map: "index_users_on_phone_confirmed")
  @@index([type], map: "index_users_on_type")
  @@index([updated_at], map: "index_users_on_updated_at")
}

model last_event {
  id         String   @id @default(uuid()) @db.Uuid
  type       String
  user_id    String?  @db.Uuid
  created_at DateTime @default(now())
  updated_at DateTime @default(now())
  users      users?   @relation(fields: [user_id], references: [id])

  @@index([created_at], map: "index_last_event_on_created_at")
  @@index([type], map: "index_last_event_on_type")
  @@index([updated_at], map: "index_last_event_on_updated_at")
  @@index([user_id], map: "index_last_event_on_user_id")
}

model phone_confirmation {
  id         String    @id @default(uuid()) @db.Uuid
  phone      String
  code       String
  ip         String
  used_at    DateTime?
  created_at DateTime  @default(now())
  updated_at DateTime  @default(now())

  @@index([code], map: "index_phone_confirmation_on_code")
  @@index([created_at], map: "index_phone_confirmation_on_created_at")
  @@index([ip], map: "index_phone_confirmation_on_ip")
  @@index([phone], map: "index_phone_confirmation_on_phone")
  @@index([updated_at], map: "index_phone_confirmation_on_updated_at")
  @@index([used_at], map: "index_phone_confirmation_on_used_at")
}

model company {
  id         String   @id @default(uuid()) @db.Uuid
  code       String
  name       String
  address    String
  user_id    String?  @db.Uuid
  created_at DateTime @default(now())
  updated_at DateTime @default(now())
  users      users?   @relation(fields: [user_id], references: [id])
  orders     order[]

  @@index([address], map: "index_company_on_address")
  @@index([code], map: "index_company_on_code")
  @@index([created_at], map: "index_company_on_created_at")
  @@index([name], map: "index_company_on_name")
  @@index([updated_at], map: "index_company_on_updated_at")
  @@index([user_id], map: "index_company_on_user_id")
}

model delivery_address {
  id         String    @id @default(uuid()) @db.Uuid
  address    String
  geo_code   String
  last_used  DateTime?
  comment    String?
  phone      String
  user_id    String?   @db.Uuid
  created_at DateTime  @default(now())
  updated_at DateTime  @default(now())
  users      users?    @relation(fields: [user_id], references: [id])

  @@index([address], map: "index_delivery_address_on_address")
  @@index([comment], map: "index_delivery_address_on_comment")
  @@index([created_at], map: "index_delivery_address_on_created_at")
  @@index([geo_code], map: "index_delivery_address_on_geo_code")
  @@index([last_used], map: "index_delivery_address_on_last_used")
  @@index([phone], map: "index_delivery_address_on_phone")
  @@index([updated_at], map: "index_delivery_address_on_updated_at")
  @@index([user_id], map: "index_delivery_address_on_user_id")
}

model order {
  id             String       @id @default(uuid()) @db.Uuid
  number         Int
  status         String
  comment        String?
  address        String
  delivery_at    DateTime?
  delivery_price Decimal?
  discount       Decimal?
  total          Decimal?
  user_id        String       @db.Uuid
  company_id     String       @db.Uuid
  vendor_id      String       @db.Uuid
  created_at     DateTime     @default(now())
  updated_at     DateTime     @default(now())
  company        company      @relation(fields: [company_id], references: [id])
  users          users        @relation(fields: [user_id], references: [id])
  vendor         vendor       @relation(fields: [vendor_id], references: [id])
  order_items    order_item[]

  @@index([address], map: "index_order_on_address")
  @@index([comment], map: "index_order_on_comment")
  @@index([company_id], map: "index_order_on_company_id")
  @@index([created_at], map: "index_order_on_created_at")
  @@index([delivery_at], map: "index_order_on_delivery_at")
  @@index([delivery_price], map: "index_order_on_delivery_price")
  @@index([discount], map: "index_order_on_discount")
  @@index([number], map: "index_order_on_number")
  @@index([status], map: "index_order_on_status")
  @@index([total], map: "index_order_on_total")
  @@index([updated_at], map: "index_order_on_updated_at")
  @@index([user_id], map: "index_order_on_user_id")
  @@index([vendor_id], map: "index_order_on_vendor_id")
}

model vendor {
  id              String           @id @default(uuid()) @db.Uuid
  name            String
  slug            String?
  payment         String
  delivery        String
  description     String
  working_hours   Int
  rating          Int
  created_at      DateTime         @default(now())
  updated_at      DateTime         @default(now())
  orders          order[]
  vendor_products vendor_product[]

  @@index([created_at], map: "index_vendor_on_created_at")
  @@index([delivery], map: "index_vendor_on_delivery")
  @@index([description], map: "index_vendor_on_description")
  @@index([name], map: "index_vendor_on_name")
  @@index([payment], map: "index_vendor_on_payment")
  @@index([rating], map: "index_vendor_on_rating")
  @@index([slug], map: "index_vendor_on_slug")
  @@index([updated_at], map: "index_vendor_on_updated_at")
  @@index([working_hours], map: "index_vendor_on_working_hours")
}

model brand {
  id         String    @id @default(uuid()) @db.Uuid
  name       String
  slug       String?
  is_active  Boolean   @default(false)
  created_at DateTime  @default(now())
  updated_at DateTime  @default(now())
  products   product[]

  @@index([created_at], map: "index_brand_on_created_at")
  @@index([is_active], map: "index_brand_on_is_active")
  @@index([name], map: "index_brand_on_name")
  @@index([slug], map: "index_brand_on_slug")
  @@index([updated_at], map: "index_brand_on_updated_at")
}

model product {
  id                String             @id @default(uuid()) @db.Uuid
  name              String
  slug              String?
  description       String
  price             Decimal
  photo             String?
  weight            Int
  is_active         Boolean            @default(false)
  brand_id          String             @db.Uuid
  created_at        DateTime           @default(now())
  updated_at        DateTime           @default(now())
  brand             brand              @relation(fields: [brand_id], references: [id])
  category_products category_product[]
  order_items       order_item[]
  vendor_products   vendor_product[]

  @@index([brand_id], map: "index_product_on_brand_id")
  @@index([created_at], map: "index_product_on_created_at")
  @@index([description], map: "index_product_on_description")
  @@index([is_active], map: "index_product_on_is_active")
  @@index([name], map: "index_product_on_name")
  @@index([photo], map: "index_product_on_photo")
  @@index([price], map: "index_product_on_price")
  @@index([slug], map: "index_product_on_slug")
  @@index([updated_at], map: "index_product_on_updated_at")
  @@index([weight], map: "index_product_on_weight")
}

model vendor_product {
  id         String   @id @default(uuid()) @db.Uuid
  price      Decimal
  min_count  Int
  unit       Int
  vendor_id  String   @db.Uuid
  product_id String   @db.Uuid
  created_at DateTime @default(now())
  updated_at DateTime @default(now())
  product    product  @relation(fields: [product_id], references: [id])
  vendor     vendor   @relation(fields: [vendor_id], references: [id])

  @@index([created_at], map: "index_vendor_product_on_created_at")
  @@index([min_count], map: "index_vendor_product_on_min_count")
  @@index([price], map: "index_vendor_product_on_price")
  @@index([product_id], map: "index_vendor_product_on_product_id")
  @@index([unit], map: "index_vendor_product_on_unit")
  @@index([updated_at], map: "index_vendor_product_on_updated_at")
  @@index([vendor_id], map: "index_vendor_product_on_vendor_id")
}

model order_item {
  id         String   @id @default(uuid()) @db.Uuid
  price      Decimal
  count      Int
  order_id   String   @db.Uuid
  product_id String   @db.Uuid
  created_at DateTime @default(now())
  updated_at DateTime @default(now())
  order      order    @relation(fields: [order_id], references: [id])
  product    product  @relation(fields: [product_id], references: [id])

  @@index([count], map: "index_order_item_on_count")
  @@index([created_at], map: "index_order_item_on_created_at")
  @@index([order_id], map: "index_order_item_on_order_id")
  @@index([price], map: "index_order_item_on_price")
  @@index([product_id], map: "index_order_item_on_product_id")
  @@index([updated_at], map: "index_order_item_on_updated_at")
}

model category {
  id                String             @id @default(uuid()) @db.Uuid
  sub_id            String             @db.Uuid
  name              String
  slug              String?
  icon              String?
  priority          Int?
  is_active         Boolean            @default(false)
  created_at        DateTime           @default(now())
  updated_at        DateTime           @default(now())
  category_products category_product[]

  @@index([created_at], map: "index_category_on_created_at")
  @@index([icon], map: "index_category_on_icon")
  @@index([is_active], map: "index_category_on_is_active")
  @@index([name], map: "index_category_on_name")
  @@index([priority], map: "index_category_on_priority")
  @@index([slug], map: "index_category_on_slug")
  @@index([sub_id], map: "index_category_on_sub_id")
  @@index([updated_at], map: "index_category_on_updated_at")
}

model category_product {
  id          String   @id @default(uuid()) @db.Uuid
  sub_id      String   @db.Uuid
  is_active   Boolean  @default(false)
  category_id String   @db.Uuid
  product_id  String   @db.Uuid
  created_at  DateTime @default(now())
  updated_at  DateTime @default(now())
  category    category @relation(fields: [category_id], references: [id])
  product     product  @relation(fields: [product_id], references: [id])

  @@index([category_id], map: "index_category_product_on_category_id")
  @@index([created_at], map: "index_category_product_on_created_at")
  @@index([is_active], map: "index_category_product_on_is_active")
  @@index([product_id], map: "index_category_product_on_product_id")
  @@index([sub_id], map: "index_category_product_on_sub_id")
  @@index([updated_at], map: "index_category_product_on_updated_at")
}
