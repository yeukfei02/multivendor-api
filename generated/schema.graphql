### This file was generated by Nexus Schema
### Do not make changes to this file directly


input AddAddressInput {
  address: String!
  comment: String!
  geo_code: String!
  phone: String!
  user_id: String!
}

type AddAddressResult {
  message: String!
}

input AddCompanyInput {
  address: String!
  code: String!
  name: String!
  user_id: String!
}

type AddCompanyResult {
  message: String!
}

input AddOrderInput {
  address: String!
  comment: String
  company_id: String!
  delivery_at: String
  delivery_price: Float
  discount: Float
  number: Int!
  status: String!
  total: Float
  user_id: String!
  vendor_id: String!
}

type AddOrderResult {
  message: String!
}

type AddUserResult {
  message: String!
}

type Brand {
  created_at: String!
  id: String!
  is_active: Boolean!
  name: String!
  products: [Product]
  slug: String
  updated_at: String!
}

type Category {
  categoryProducts: [CategoryProduct]
  created_at: String!
  icon: String
  id: String!
  is_active: Boolean!
  name: String!
  priority: Int
  slug: String
  sub_id: String!
  updated_at: String!
}

type CategoryProduct {
  categories: [Category]
  created_at: String!
  id: String!
  is_active: Boolean!
  products: [Product]
  sub_id: String!
  updated_at: String!
}

input CheckCodeInput {
  code: String!
  phone: String!
}

type CheckCodeResult {
  message: String!
  phoneConfirmation: PhoneConfirmation
}

type Company {
  address: String!
  code: String!
  created_at: String!
  id: String!
  name: String!
  updated_at: String!
  users: User!
}

type DeliveryAddress {
  address: String!
  comment: String!
  created_at: String!
  geo_code: String!
  id: String!
  last_used: String
  phone: String!
  updated_at: String!
  users: User!
}

type GenerateCodeResult {
  code: String!
  message: String!
}

type GetAddressResult {
  deliveryAddress: DeliveryAddress
  message: String!
}

type GetAddressesResult {
  deliveryAddresses: [DeliveryAddress]
  message: String!
}

type GetBrandProductsResult {
  brandProducts: [Product]
  message: String!
}

type GetBrandResult {
  brand: Brand
  message: String!
}

type GetCategoriesResult {
  categories: [Category]
  message: String!
}

type GetCategoryProductsResult {
  categoryProducts: [CategoryProduct]
  message: String!
}

type GetCategoryResult {
  category: Category
  message: String!
}

type GetCompaniesResult {
  companies: [Company]
  message: String!
}

type GetCompanyResult {
  company: Company
  message: String!
}

type GetItemsResult {
  message: String!
  orderItems: [OrderItem]
}

type GetOrderResult {
  message: String!
  order: Order
}

type GetOrdersResult {
  message: String!
  orders: [Order]
}

type GetProductCategoriesResult {
  message: String!
  productCategories: [Product]
}

type GetProductResult {
  message: String!
  product: Product
}

type GetProductSubCategoriesResult {
  message: String!
  productSubCategories: [Product]
}

type GetProductVendorsResult {
  message: String!
  productVendors: [VendorProduct]
}

type GetSubCategoriesResult {
  message: String!
  subCategories: [Category]
}

type GetSubCategoryProductsResult {
  message: String!
  subCategoryProducts: [CategoryProduct]
}

type GetUserResult {
  message: String!
  user: User
}

type GetVendorProductsResult {
  message: String!
  vendorProducts: [VendorProduct]
}

type GetVendorResult {
  message: String!
  vendor: Vendor
}

type Mutation {
  addAddress(input: AddAddressInput!): AddAddressResult!
  addCompany(input: AddCompanyInput!): AddCompanyResult!
  addOrder(input: AddOrderInput!): AddOrderResult!
  addUser(phone: String!): AddUserResult!
  generateCode(phone: String!): GenerateCodeResult!
  repeatOrder(id: String!): RepeatOrderResult!
}

type Order {
  address: String!
  comment: String
  created_at: String!
  deliver_at: String
  delivery_price: Float
  discount: Float
  id: String!
  number: Float!
  status: String!
  total: Float
  updated_at: String!
  users: User!
}

type OrderItem {
  count: Int!
  created_at: String!
  id: String!
  order: Order!
  price: Float!
  product: Product!
  updated_at: String!
}

type PhoneConfirmation {
  code: String!
  created_at: String!
  id: String!
  ip: String!
  phone: String!
  updated_at: String!
  used_at: String
}

type Product {
  allow_order: Boolean!
  brand: Brand
  category_products: [CategoryProduct]
  created_at: String!
  id: String!
  is_active: Boolean!
  order_items: [OrderItem]
  phone: String!
  phone_confirmed: Boolean!
  type: String
  updated_at: String!
  vendor_products: [VendorProduct]
}

input ProductVendorsInput {
  product_id: String!
  vendor_id: String!
}

type Query {
  checkCode(input: CheckCodeInput!): CheckCodeResult!
  getAddress(id: String!): GetAddressResult!
  getAddresses(user_id: String!): GetAddressesResult!
  getBrand(id: String!): GetBrandResult!
  getBrandProducts(brand_id: String!): GetBrandProductsResult!
  getCategories: GetCategoriesResult!
  getCategory(id: String!): GetCategoryResult!
  getCategoryProducts(category_id: String!): GetCategoryProductsResult!
  getCompanies(user_id: String!): GetCompaniesResult!
  getCompany(id: String!): GetCompanyResult!
  getItems(order_id: String!): GetItemsResult!
  getOrder(id: String!): GetOrderResult!
  getOrders(user_id: String!): GetOrdersResult!
  getProduct(id: String!): GetProductResult!
  getProductCategories(category_id: String!): GetProductCategoriesResult!
  getProductSubCategories(sub_id: String!): GetProductSubCategoriesResult!
  getProductVendors(input: ProductVendorsInput!): GetProductVendorsResult!
  getSubCategories(sub_id: String!): GetSubCategoriesResult!
  getSubCategoryProducts(sub_id: String!): GetSubCategoryProductsResult!
  getUser(phone: String!): GetUserResult!
  getVendor(id: String!): GetVendorResult!
  getVendorProducts(input: VendorProductsInput!): GetVendorProductsResult!
}

type RepeatOrderResult {
  message: String!
}

type User {
  allow_order: Boolean!
  created_at: String!
  id: String!
  is_active: Boolean!
  phone: String!
  phone_confirmed: Boolean!
  updated_at: String!
}

type Vendor {
  created_at: String!
  delivery: String!
  description: String!
  id: String!
  name: String!
  orders: [Order]
  payment: String!
  rating: Int!
  slug: String
  updated_at: String!
  vendor_products: [VendorProduct]
  working_hours: Int!
}

type VendorProduct {
  created_at: String!
  id: String!
  min_count: Int!
  price: Float!
  product: Product
  unit: Int!
  updated_at: String!
  vendor: Vendor
}

input VendorProductsInput {
  category_id: String!
  sub_id: String!
  vendor_id: String!
}
